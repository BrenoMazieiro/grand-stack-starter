version: '3'

services:

  proxy:
    container_name: proxy.local.mycompany.com
    image: jwilder/nginx-proxy:latest
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro"
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      main:
        aliases:
          - proxy.local.mycompany.com

  neo4j.local.mycompany.com:
    image: registry-mycompany-neo4j
    container_name: neo4j.local.mycompany.com
    ports:
      - "7474:7474"
      - "7473:7473"
      - "7687:7687"
    restart: always
    volumes:
      - "./var/neo4j:/data:rw"
    environment:
      VIRTUAL_HOST: 'neo4j.local.mycompany.com'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_dbms_shell_enabled: "true"
    networks:
      main:
        aliases:
          - neo4j.local.mycompany.com

  api.local.mycompany.com:
    image: registry-mycompany-nodejs
    container_name: api.local.mycompany.com
    volumes:
      - "./api:/opt/app-root/src:rw"
    ports:
      - 80
    environment:
      VIRTUAL_HOST: 'api.local.mycompany.com'
      VIRTUAL_PORT: 80
      GRAPHQL_LISTEN_PORT: 80
      GRAPHQL_URI: 'http://api.local.mycompany.com/'
      JWT_SECRET: 'mysupersecretjwt'
      ADMIN_EMAIL: 'admin@mycompany.com'
      ADMIN_PASSWORD: 'itssecret'
      TOKEN_EXPIRE_IN: '48h'
      APP_ENV: 'development'
      NODE_ENV: 'development'
      NEO4J_URI: 'bolt://neo4j.local.mycompany.com:7687'
      NEO4J_USER: 'neo4j'
      NEO4J_PASSWORD: 'letmein'
      WORKER_MINUTES: 60
    command: ['./wait-for-it.sh', '-t', '0', 'neo4j.local.mycompany.com:7474', '--', '.s2i/bin/assemble']
    networks:
      main:
        aliases:
          - api.local.mycompany.com

  ui.local.mycompany.com:
    image: registry-mycompany-nodejs
    container_name: ui.local.mycompany.com
    volumes:
      - "./ui:/opt/app-root/src:rw"
    ports:
      - 80
    environment:
      VIRTUAL_HOST: 'ui.local.mycompany.com'
      VIRTUAL_PORT: 80
      APP_ENV: 'development'
      NODE_ENV: 'development'
    command: ['./wait-for-it.sh', '-t', '0', 'api.local.mycompany.com:80', '--', '.s2i/bin/assemble']
    networks:
      main:
        aliases:
          - ui.local.mycompany.com

networks:
  main: